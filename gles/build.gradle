plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 30
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild{
            cmake{
                cppFlags "-std=c++11", "-Wall"
                arguments "-DANDROID_STL=c++_static"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild{
        cmake{
            path "src/main/jni/CMakeLists.txt"
        }
    }
}
//task deleteObjJar(type: Delete){
//    delete 'release/library.jar'
//}
//// 4. release 폴더에 library 이름으로 jar 생성.
//task exportJar(type: Copy){
//    from('build/intermediates/packaged-classes/release/')
//    into('release/')
//    include('classes.jar')
//    rename('classes.jar', 'library.jar')
//}
//
//// 5. exportJar 실행시 deleteObjectJar가 실행되도록 설정
//exportJar.dependsOn(deleteObjJar, build)


dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}